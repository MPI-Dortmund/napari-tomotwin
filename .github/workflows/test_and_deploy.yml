# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: tests

on:
  push:
    branches:
      - main
      - npe2
      - action_test
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
      - npe2
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        #platform: [ubuntu-latest, windows-latest, macos-latest]
        platform: [ubuntu-latest]
        #python-version: ['3.8', '3.9', '3.10']
        python-version: ['3.10']

    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v3
    - name: Set up conda ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        activate-environment: napari-tomotwin
        channel-priority: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge, defaults
        environment-file: conda_env.yml
    - run: conda --version
    - run: conda init bash
    - run: |
        which python
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools_scm pylint tox tox-gh-actions pytest pytest-coverage pytest-xvfb twine build napari-boxmanager
        pip install .
    - name: Debug Info
      run: |
        which python
        pip freeze
    - name: Analysing the code with pylint
      run: |
        pylint -E $(git ls-files '*.py')
    - name: Tests
      run: |
        pytest -v --cov=./ --cov-report=xml --cov-config=.coveragerc
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python -m build .
          twine upload dist/*
